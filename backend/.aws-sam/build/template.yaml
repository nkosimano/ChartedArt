AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ChartedArt Backend Services Serverless API with Lambda functions, API
  Gateway, and S3 storage

  '
Globals:
  Function:
    Timeout: 10
    MemorySize: 256
    Runtime: nodejs20.x
    Environment:
      Variables:
        SUPABASE_URL:
          Ref: SupabaseUrl
        SUPABASE_SERVICE_KEY:
          Ref: SupabaseServiceKey
        NODE_ENV: production
    Architectures:
    - x86_64
Parameters:
  SupabaseUrl:
    Type: String
    Description: The URL for the Supabase project
    Default: https://uuqfobbkjhrpylygauwf.supabase.co
  SupabaseServiceKey:
    Type: String
    Description: The service role key for Supabase (KEEP SECRET)
    NoEcho: true
  Environment:
    Type: String
    Description: Environment name (dev, staging, production)
    Default: dev
    AllowedValues:
    - dev
    - staging
    - production
Resources:
  ChartedArtApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
        MaxAge: '''600'''
      MethodSettings:
      - ResourcePath: /*
        HttpMethod: '*'
        ThrottlingBurstLimit: 100
        ThrottlingRateLimit: 50
      Models:
        OrderRequest:
          type: object
          required:
          - items
          - shipping_address
          properties:
            items:
              type: array
            shipping_address:
              type: object
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/apigateway/${ChartedArtApi}
      RetentionInDays: 30
  GetOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetOrdersFunction
      Handler: get-orders.handler
      Description: Get all orders (admin only)
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ChartedArtApi
            Path: /admin/orders
            Method: GET
    Metadata:
      SamResourceId: GetOrdersFunction
  GetOrdersFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetOrdersFunction}
      RetentionInDays: 30
  UpdateOrderStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateOrderStatusFunction
      Handler: update-order-status.handler
      Description: Update order status (admin only)
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ChartedArtApi
            Path: /admin/orders/{id}
            Method: PUT
    Metadata:
      SamResourceId: UpdateOrderStatusFunction
  UpdateOrderStatusFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${UpdateOrderStatusFunction}
      RetentionInDays: 30
  CreateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateOrderFunction
      Handler: create-order.handler
      Description: Create a new order
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ChartedArtApi
            Path: /orders
            Method: POST
    Metadata:
      SamResourceId: CreateOrderFunction
  CreateOrderFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CreateOrderFunction}
      RetentionInDays: 30
  RegisterPushTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RegisterPushTokenFunction
      Handler: register-push-token.handler
      Description: Register push notification token for user
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ChartedArtApi
            Path: /push-token
            Method: POST
    Metadata:
      SamResourceId: RegisterPushTokenFunction
  RegisterPushTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${RegisterPushTokenFunction}
      RetentionInDays: 30
Outputs:
  ApiGatewayUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ChartedArtApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
  ApiGatewayId:
    Description: API Gateway ID
    Value:
      Ref: ChartedArtApi
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiId
  Region:
    Description: AWS Region
    Value:
      Ref: AWS::Region
